-- BUS-ADM 749 Data and Information Management
-- Michael Noel
-- Continental Palms DVD
-- test_execute_procedures.sql


-- FAIL. Member does not exist.
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-20003. Member does not exist.'); END;
BEGIN PROC_CHECKOUT( THECATALOGNO => 'D00001', THECOPYNO => 1, THEMEMBERNO => 12345); END;

-- FAIL. DVD does not exist.
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-20001. DVD does not exist.'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D12345', THECOPYNO => 1, THEMEMBERNO => 10000); END;

-- FAIL. DVDCopy does not exist.
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-20002. DVDCopy does not exist.'); END;
BEGIN PROC_CHECKOUT( THECATALOGNO => 'D00001', THECOPYNO => 25, THEMEMBERNO => 10000); END;

-- FAIL. DVDCopy Condition is 4
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-20008. DVDCopy Broken.'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00007', THECOPYNO => 3, THEMEMBERNO => 10000); END;

-- Create scenarios where:
-- 1. DVDCopy.branchNo is NOT NULL and the DVD is checked out.
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00001', THECOPYNO => 1, THEMEMBERNO => 10000, THERENTALDATE => '01-MAY-2020'); END;
-- create error
UPDATE DVDCOPY SET BRANCHNO = 'IL01' WHERE CATALOGNO = 'D00001' AND COPYNO = 1; COMMIT;
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-20006. ERROR CHECKOUT NULL CONDITIONS VIOLATED! * 2'); END;
-- check that error runs
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00001', THECOPYNO => 1, THEMEMBERNO => 10000, THERENTALDATE => '03-MAY-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00001', THECOPYNO => 1, THECONDITION => 1, THEBRANCHNO => 'IL02', THERETURNDATE => '04-MAY-2020'); END;
-- correct error and checkin
UPDATE DVDCOPY SET BRANCHNO = Null WHERE CATALOGNO = 'D00001' AND COPYNO = 1; COMMIT;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00001', THECOPYNO => 1, THECONDITION => 1, THEBRANCHNO => 'WI02', THERETURNDATE => '04-MAY-2020'); END;

-- 2. DVDCopy.branchNo is NULL and the Rental.returnDate and Rental.ReturnTo NOT NULL.
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00002', THECOPYNO => 1, THEMEMBERNO => 10001, THERENTALDATE => '04-MAY-2020'); END;
-- create error
UPDATE RENTAL SET RETURNDATE = '05-MAY-2020', RETURNEDTO = 'IL02' WHERE CATALOGNO = 'D00002' AND COPYNO = 1;
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-20006. ERROR CHECKOUT NULL CONDITIONS VIOLATED! * 2'); END;
-- check that the error runs
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00002', THECOPYNO => 1, THEMEMBERNO => 10000, THERENTALDATE => '04-MAY-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00002', THECOPYNO => 1, THECONDITION => 1, THEBRANCHNO => 'IL02', THERETURNDATE => '05-MAY-2020'); END;
-- correct error and checkin
UPDATE RENTAL SET RETURNDATE = Null, RETURNEDTO = Null WHERE CATALOGNO = 'D00002' AND COPYNO = 1;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00002', THECOPYNO => 1, THECONDITION => 1, THEBRANCHNO => 'WI02', THERETURNDATE => '05-MAY-2020'); END;

-- FAIL. Branch not exist.
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00006', THECOPYNO => 1, THEMEMBERNO => 10002, THERENTALDATE => '07-MAY-2020'); END;
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-20004. The Branch specified does not exist.'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00006', THECOPYNO => 1, THECONDITION => 1, THEBRANCHNO => 'GA01', THERETURNDATE => '08-MAY-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00006', THECOPYNO => 1, THECONDITION => 1, THEBRANCHNO => 'WI01', THERETURNDATE => '08-MAY-2020'); END;


-- FAIL. ReturnDate before RentDate.
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-20009. ReturnDate before RentDate.'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00005', THECOPYNO => 1, THEMEMBERNO => 10001, THERENTALDATE => '01-JUN-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00005', THECOPYNO => 1, THECONDITION => 1, THEBRANCHNO => 'WI01', THERETURNDATE => '31-MAY-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00005', THECOPYNO => 1, THECONDITION => 1, THEBRANCHNO => 'WI01', THERETURNDATE => '04-JUN-2020'); END;

-- SUCCESS. Conditions satisfied.
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00001', THECOPYNO => 2, THEMEMBERNO => 10000, THERENTALDATE=> '01-OCT-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00001', THECOPYNO => 2, THECONDITION => 1, THEBRANCHNO => 'WI01', THERETURNDATE => '31-OCT-2020'); END;

-- FAIL. DVD does not exist.
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-20001. DVD does not exist.'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D12345', THECOPYNO => 2, THECONDITION => 1, THEBRANCHNO => 'WI01', THERETURNDATE => '02-NOV-2020'); END;

-- FAIL. DVDCopy does not exist.
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-20002. DVDCopy does not exist.'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00001', THECOPYNO => 25, THECONDITION => 1, THEBRANCHNO => 'WI01', THERETURNDATE => '02-NOV-2020'); END;

-- FAIL DVDCopy already checked in.
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-200014. DVDCopy already checked in.'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00001', THECOPYNO => 2, THECONDITION => 1, THEBRANCHNO => 'WI01', THERETURNDATE => '02-NOV-2020'); END;


-- Check out a ton of DVDs.
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00001', THECOPYNO => 1, THEMEMBERNO => 10000, THERENTALDATE=> '01-NOV-2020'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00002', THECOPYNO => 1, THEMEMBERNO => 10000, THERENTALDATE=> '01-NOV-2020'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00003', THECOPYNO => 1, THEMEMBERNO => 10000, THERENTALDATE=> '01-NOV-2020'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00004', THECOPYNO => 1, THEMEMBERNO => 10000, THERENTALDATE=> '01-NOV-2020'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00005', THECOPYNO => 1, THEMEMBERNO => 10000, THERENTALDATE=> '01-NOV-2020'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00006', THECOPYNO => 1, THEMEMBERNO => 10000, THERENTALDATE=> '01-NOV-2020'); END;

-- FAIL. Try to check out all the DVDs just checked out.
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-20010. DVDCopy already checked out * 6.'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00001', THECOPYNO => 1, THEMEMBERNO => 10000, THERENTALDATE=> '02-NOV-2020'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00002', THECOPYNO => 1, THEMEMBERNO => 10000, THERENTALDATE=> '02-NOV-2020'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00003', THECOPYNO => 1, THEMEMBERNO => 10000, THERENTALDATE=> '02-NOV-2020'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00004', THECOPYNO => 1, THEMEMBERNO => 10000, THERENTALDATE=> '02-NOV-2020'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00005', THECOPYNO => 1, THEMEMBERNO => 10000, THERENTALDATE=> '02-NOV-2020'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00006', THECOPYNO => 1, THEMEMBERNO => 10000, THERENTALDATE=> '02-NOV-2020'); END;

-- Check them all back in.
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00001', THECOPYNO => 1, THECONDITION => 1, THEBRANCHNO => 'WI02', THERETURNDATE => '02-NOV-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00002', THECOPYNO => 1, THECONDITION => 1, THEBRANCHNO => 'WI02', THERETURNDATE => '02-NOV-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00003', THECOPYNO => 1, THECONDITION => 1, THEBRANCHNO => 'WI02', THERETURNDATE => '02-NOV-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00004', THECOPYNO => 1, THECONDITION => 1, THEBRANCHNO => 'WI02', THERETURNDATE => '02-NOV-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00005', THECOPYNO => 1, THECONDITION => 1, THEBRANCHNO => 'WI02', THERETURNDATE => '02-NOV-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00006', THECOPYNO => 1, THECONDITION => 1, THEBRANCHNO => 'WI02', THERETURNDATE => '02-NOV-2020'); END;

-- Check out a ton of DVDs again.
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00001', THECOPYNO => 1, THEMEMBERNO => 10001, THERENTALDATE=> '01-DEC-2020'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00002', THECOPYNO => 1, THEMEMBERNO => 10001, THERENTALDATE=> '01-DEC-2020'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00003', THECOPYNO => 1, THEMEMBERNO => 10001, THERENTALDATE=> '01-DEC-2020'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00004', THECOPYNO => 1, THEMEMBERNO => 10001, THERENTALDATE=> '01-DEC-2020'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00005', THECOPYNO => 1, THEMEMBERNO => 10001, THERENTALDATE=> '01-DEC-2020'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00006', THECOPYNO => 1, THEMEMBERNO => 10001, THERENTALDATE=> '01-DEC-2020'); END;

-- FAIL. Try to check the DVD into a Branch that does not exist.
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-20004. Branch does not exist * 6.'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00001', THECOPYNO => 1, THECONDITION => 1, THEBRANCHNO => 'IL99', THERETURNDATE => '03-DEC-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00002', THECOPYNO => 1, THECONDITION => 1, THEBRANCHNO => 'IL99', THERETURNDATE => '03-DEC-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00003', THECOPYNO => 1, THECONDITION => 1, THEBRANCHNO => 'IL99', THERETURNDATE => '03-DEC-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00004', THECOPYNO => 1, THECONDITION => 1, THEBRANCHNO => 'IL99', THERETURNDATE => '03-DEC-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00005', THECOPYNO => 1, THECONDITION => 1, THEBRANCHNO => 'IL99', THERETURNDATE => '03-DEC-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00006', THECOPYNO => 1, THECONDITION => 1, THEBRANCHNO => 'IL99', THERETURNDATE => '03-DEC-2020'); END;

-- FAIL. Try to checkin the DVD and the condition is not in (1,2,3,4).
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-02290. Improper condition * 6.'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00001', THECOPYNO => 1, THECONDITION => 8, THEBRANCHNO => 'IL01', THERETURNDATE => '03-DEC-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00002', THECOPYNO => 1, THECONDITION => 8, THEBRANCHNO => 'IL01', THERETURNDATE => '03-DEC-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00003', THECOPYNO => 1, THECONDITION => 8, THEBRANCHNO => 'IL01', THERETURNDATE => '03-DEC-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00004', THECOPYNO => 1, THECONDITION => 8, THEBRANCHNO => 'IL01', THERETURNDATE => '03-DEC-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00005', THECOPYNO => 1, THECONDITION => 8, THEBRANCHNO => 'IL01', THERETURNDATE => '03-DEC-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00006', THECOPYNO => 1, THECONDITION => 8, THEBRANCHNO => 'IL01', THERETURNDATE => '03-DEC-2020'); END;

-- Check in a ton of DVDs again.
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00001', THECOPYNO => 1, THECONDITION => 2, THEBRANCHNO => 'IL01', THERETURNDATE => '03-DEC-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00002', THECOPYNO => 1, THECONDITION => 2, THEBRANCHNO => 'IL01', THERETURNDATE => '03-DEC-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00003', THECOPYNO => 1, THECONDITION => 2, THEBRANCHNO => 'IL01', THERETURNDATE => '03-DEC-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00004', THECOPYNO => 1, THECONDITION => 2, THEBRANCHNO => 'IL01', THERETURNDATE => '03-DEC-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00005', THECOPYNO => 1, THECONDITION => 2, THEBRANCHNO => 'IL01', THERETURNDATE => '03-DEC-2020'); END;
BEGIN PROC_CHECKIN(THECATALOGNO => 'D00006', THECOPYNO => 1, THECONDITION => 2, THEBRANCHNO => 'IL01', THERETURNDATE => '03-DEC-2020'); END;

-- Check out a ton of DVDs again.
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00001', THECOPYNO => 2, THEMEMBERNO => 10002); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00002', THECOPYNO => 2, THEMEMBERNO => 10002); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00003', THECOPYNO => 1, THEMEMBERNO => 10002); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00004', THECOPYNO => 2, THEMEMBERNO => 10002); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00005', THECOPYNO => 2, THEMEMBERNO => 10002); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00006', THECOPYNO => 2, THEMEMBERNO => 10002); END;

-- FAIL. Check out DVDs with a future date.
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-20011. Future Rental * 5.'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00001', THECOPYNO => 1, THEMEMBERNO => 10000, THERENTALDATE => '31-DEC-2021'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00002', THECOPYNO => 1, THEMEMBERNO => 10000, THERENTALDATE => '31-DEC-2021'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00004', THECOPYNO => 1, THEMEMBERNO => 10000, THERENTALDATE => '31-DEC-2021'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00005', THECOPYNO => 1, THEMEMBERNO => 10000, THERENTALDATE => '31-DEC-2021'); END;
BEGIN PROC_CHECKOUT(THECATALOGNO => 'D00006', THECOPYNO => 1, THEMEMBERNO => 10000, THERENTALDATE => '31-DEC-2021'); END;

-- Insert staff into WI03 for staff testing.
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0301','Michael','Noel','manager',99999, '29-MAY-1987','WI03',Null); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0302','Minion','No1','supervisor',100, '1-JAN-2000','WI03','WI0301'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0303','Minion','No2','supervisor',100, '2-JAN-2000','WI03','WI0301'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0304','Minion','No3','assistant',50, '3-JAN-2000','WI03','WI0301'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0305','Minion','No4','assistant',50, '4-JAN-2000','WI03','WI0301'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0306','Minion','No5','assistant',50, '5-JAN-2000','WI03','WI0301'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0307','Minion','No6','assistant',50, '6-JAN-2000','WI03','WI0301'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0308','Minion','No7','assistant',50, '7-JAN-2000','WI03','WI0301'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0309','Minion','No8','assistant',50, '8-JAN-2000','WI03','WI0301'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0310','Minion','No9','assistant',50, '9-JAN-2000','WI03','WI0301'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0311','Minion','No10','assistant',50, '10-JAN-2000','WI03','WI0301'); COMMIT;
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-20016. A supervisor may not oversee more than 10 staff.'); END;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0312','Minion','No11','assistant',50, '11-JAN-2000','WI03','WI0301'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0313','Minion','No12','assistant',50, '12-JAN-2000','WI03','WI0301'); COMMIT;
-- Correct the error and try to update to make the same error
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0312','Minion','No11','assistant',50, '11-JAN-2000','WI03','WI0302'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0313','Minion','No12','assistant',50, '12-JAN-2000','WI03','WI0302'); COMMIT;
-- Update incorrectly
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-20016. A supervisor may not oversee more than 10 staff.'); END;
UPDATE STAFF SET SUPERVISOR = 'WI0301' WHERE STAFFNO IN ('WI0312', 'WI0313'); COMMIT;

-- DELETE RECORDS FROM TABLE TEST NEXT CONSTRAINT. A supervisor must be in a position of manager or supervisor.
DELETE FROM STAFF WHERE BRANCHNO = 'WI03'; COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0301','Michael','Noel','manager',99999, '29-MAY-1987','WI03',Null); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0302','Minion','No1','supervisor',100, '1-JAN-2000','WI03','WI0301'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0303','Minion','No2','supervisor',100, '2-JAN-2000','WI03','WI0301'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0304','Minion','No3','assistant',50, '3-JAN-2000','WI03','WI0302'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0305','Minion','No4','assistant',50, '4-JAN-2000','WI03','WI0302'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0306','Minion','No5','assistant',50, '5-JAN-2000','WI03','WI0302'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0307','Minion','No6','assistant',50, '6-JAN-2000','WI03','WI0302'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0308','Minion','No7','assistant',50, '7-JAN-2000','WI03','WI0303'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0309','Minion','No8','assistant',50, '8-JAN-2000','WI03','WI0303'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0310','Minion','No9','assistant',50, '9-JAN-2000','WI03','WI0303'); COMMIT;
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-20018. Supervisor specified must be in a position of manager or supervisor.'); END;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0311','Minion','No10','assistant',50, '10-JAN-2000','WI03','WI0304'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0312','Minion','No11','assistant',50, '11-JAN-2000','WI03','WI0304'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0313','Minion','No12','assistant',50, '12-JAN-2000','WI03','WI0304'); COMMIT;
-- Correct the issue then.
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0312','Minion','No11','assistant',50, '11-JAN-2000','WI03','WI0303'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0313','Minion','No12','assistant',50, '12-JAN-2000','WI03','WI0303'); COMMIT;
-- Test the update prevention of the trigger.
UPDATE STAFF SET SUPERVISOR = 'WI0304' WHERE STAFFNO = 'WI0312'; COMMIT;
UPDATE STAFF SET SUPERVISOR = 'WI0304' WHERE STAFFNO = 'WI0313'; COMMIT;

-- DELETE RECORDS FROM TABLE TEST NEXT CONSTRAINT. A supervisor must be in a position of manager or supervisor.
DELETE FROM STAFF WHERE BRANCHNO = 'WI03'; COMMIT;
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-20018. Supervisor specified is in the position of manager and cannot have a supervisor.'); END;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0301','Michael','Noel','manager',99999, '29-MAY-1987','WI03','WI0102'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0301','Michael','Noel','manager',99999, '29-MAY-1987','WI03', Null); COMMIT;
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-20018. Supervisor specified is in the position of manager and cannot have a supervisor.'); END;
UPDATE STAFF SET SUPERVISOR = 'WI0102' WHERE STAFFNO = 'WI0301'; COMMIT;

INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0302','Minion','No1','supervisor',100, '1-JAN-2000','WI03','WI0301'); COMMIT;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0303','Minion','No2','supervisor',100, '2-JAN-2000','WI03','WI0302'); COMMIT;
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-200. > 3 hierarchy error.'); END;
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0304','Minion','No3','assistant',50, '3-JAN-2000','WI03','WI0303'); COMMIT;
-- Correct the issue.
INSERT INTO STAFF (STAFFNO, FIRSTNAME, LASTNAME, POSITION, SALARY, DOB, BRANCHNO, SUPERVISOR) VALUES ('WI0304','Minion','No3','assistant',50, '3-JAN-2000','WI03','WI0302'); COMMIT;
BEGIN DBMS_OUTPUT.PUT_LINE('TEST SHOULD FAIL. ORA-200. > 3 hierarchy error.'); END;
-- Test update trigger constraint
UPDATE STAFF SET SUPERVISOR = 'WI0303' WHERE STAFFNO = 'WI0304'; COMMIT;